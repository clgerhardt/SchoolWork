 package prob2;

import java.io.File; 
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
//import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;



public class RectangleTester {
	
	public static void main(String[] args) throws IOException {
		ArrayList<GeometricObject> rectangles = new ArrayList<>();
		
		File inFile = new File("src/prob2/rectangles.txt");		
		
//		System.out.println("File exists   : " + inFile.exists());
//		System.out.println("File size     : " + inFile.length() + " bytes");
//		System.out.println("Can be read   : " + inFile.canRead());
//		System.out.println("Can be written: " + inFile.canWrite());
//		System.out.println("Is a directory: " + inFile.isDirectory());
//		System.out.println("Is a file     : " + inFile.isFile());
//		System.out.println("Is hidden     : " + inFile.isHidden());
//		System.out.println("Absolute path : " + inFile.getAbsolutePath());
//		System.out.println("Path          : " + inFile.getPath());
//		System.out.println("Parent        : " + inFile.getParent());
//		System.out.println("Name          : " + inFile.getName());
//		// Must compute the "true" path
//		String absPath = inFile.getAbsolutePath();
//		int begOfFileName = absPath.lastIndexOf(inFile.getName());
//		String truePath = absPath.substring(0,begOfFileName);
//		System.out.println("True path     : " + truePath);
//
//		System.out.println("Last modified : " + new java.util.Date(inFile.lastModified()));
		
		File outFile = new File("src/prob2/illegalRectangles.txt");
		ArrayList<Object> illegalR = new ArrayList<>();
	  	try{
    		Scanner input = new Scanner( inFile );
    		while(input.hasNext()){
    				double height = input.nextDouble();
    				double width = input.nextDouble();
    				rectangles.add(new Rectangle(width, height));
 
    			
    		}
    		input.close();
    		
        	for(GeometricObject e : rectangles){
        		try{
        			e.getArea();
        		}
        	  	catch(IllegalRectangleException re){
        	  		illegalR.add(re);
        	  		FileWriter fw = new FileWriter(outFile, true);
					PrintWriter writer = new PrintWriter(fw);
        	  		writer.print(illegalR + " \n");
        	  		writer.close();
            		//writer.close();
            		
        	  	}
        	}
        	System.out.println( "File written" );
	  	}
	  	
	  	
    	catch( IOException e ){
    		System.out.println(e);
    	}
	  	/*
    	for(GeometricObject e : rectangles){
    		try{
    			System.out.println(e.getArea() + "\n");
    		}
	  	catch(IllegalRectangleException re){
	  		//System.out.println(re);
	  		System.out.println("height = " + re.getHeight() + ", width = " + re.getWidth() + ", area = " + re.getArea());
	  		//continue;
	  	}
		*/
    	
	}
}
	

